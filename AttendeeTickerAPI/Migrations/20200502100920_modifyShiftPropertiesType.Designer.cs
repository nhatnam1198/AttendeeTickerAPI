// <auto-generated />
using System;
using AttendeeTickerAPI.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AttendeeTickerAPI.Migrations
{
    [DbContext(typeof(AttendeeTickerDbContext))]
    [Migration("20200502100920_modifyShiftPropertiesType")]
    partial class modifyShiftPropertiesType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AttendeeTickerAPI.Models.Attendance", b =>
                {
                    b.Property<int>("AttendanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AttendanceID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StudentID")
                        .HasColumnName("StudentID")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int?>("SubjectClassID")
                        .HasColumnName("SubjectClassID")
                        .HasColumnType("int");

                    b.HasKey("AttendanceID");

                    b.HasIndex("StudentID");

                    b.HasIndex("SubjectClassID");

                    b.ToTable("Attendance");
                });

            modelBuilder.Entity("AttendeeTickerAPI.Models.AttendanceDetails", b =>
                {
                    b.Property<int>("AttendanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AttendanceID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EventID")
                        .HasColumnName("EventID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAttended")
                        .HasColumnType("bit");

                    b.HasKey("AttendanceID")
                        .HasName("PK_AttendanceDetail");

                    b.HasIndex("EventID");

                    b.ToTable("AttendanceDetails");
                });

            modelBuilder.Entity("AttendeeTickerAPI.Models.ComputerFile", b =>
                {
                    b.Property<int>("FileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FileID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("FileUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentID")
                        .HasColumnName("StudentID")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("date");

                    b.HasKey("FileID")
                        .HasName("PK_File");

                    b.HasIndex("StudentID");

                    b.ToTable("ComputerFile");
                });

            modelBuilder.Entity("AttendeeTickerAPI.Models.Event", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EventID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("date");

                    b.Property<int?>("ShiftID")
                        .HasColumnName("ShiftID")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectClassID")
                        .HasColumnName("SubjectClassID")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherID")
                        .HasColumnName("TeacherID")
                        .HasColumnType("int");

                    b.HasKey("EventID");

                    b.HasIndex("ShiftID");

                    b.HasIndex("SubjectClassID");

                    b.HasIndex("TeacherID");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("AttendeeTickerAPI.Models.Shift", b =>
                {
                    b.Property<int>("ShiftID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ShiftID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ShiftEnd")
                        .HasColumnType("dateTime");

                    b.Property<string>("ShiftName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ShiftStart")
                        .HasColumnType("dateTime");

                    b.HasKey("ShiftID");

                    b.ToTable("Shift");
                });

            modelBuilder.Entity("AttendeeTickerAPI.Models.Student", b =>
                {
                    b.Property<string>("StudentID")
                        .HasColumnName("StudentID")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("date");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("PersonID")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("StudentFirstName")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("StudentLastName")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("StudentID");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("AttendeeTickerAPI.Models.Subject", b =>
                {
                    b.Property<int>("SubjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SubjectID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("date");

                    b.HasKey("SubjectID");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("AttendeeTickerAPI.Models.SubjectClass", b =>
                {
                    b.Property<int>("SubjectClassID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SubjectClassID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SubjectClassName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("SubjectID")
                        .HasColumnName("SubjectID")
                        .HasColumnType("int");

                    b.HasKey("SubjectClassID");

                    b.HasIndex("SubjectID");

                    b.ToTable("SubjectClass");
                });

            modelBuilder.Entity("AttendeeTickerAPI.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TeacherID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TeacherName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("TeacherID");

                    b.ToTable("Teacher");
                });

            modelBuilder.Entity("AttendeeTickerAPI.Models.Attendance", b =>
                {
                    b.HasOne("AttendeeTickerAPI.Models.Student", "Student")
                        .WithMany("Attendance")
                        .HasForeignKey("StudentID")
                        .HasConstraintName("FK_Attendance_Student");

                    b.HasOne("AttendeeTickerAPI.Models.SubjectClass", "SubjectClass")
                        .WithMany("Attendance")
                        .HasForeignKey("SubjectClassID")
                        .HasConstraintName("FK_Attendance_SubjectClass");
                });

            modelBuilder.Entity("AttendeeTickerAPI.Models.AttendanceDetails", b =>
                {
                    b.HasOne("AttendeeTickerAPI.Models.Attendance", "Attendance")
                        .WithMany()
                        .HasForeignKey("AttendanceID")
                        .HasConstraintName("FK_AttendanceDetails_Attendance")
                        .IsRequired();

                    b.HasOne("AttendeeTickerAPI.Models.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventID")
                        .HasConstraintName("FK_AttendanceDetails_Event");
                });

            modelBuilder.Entity("AttendeeTickerAPI.Models.ComputerFile", b =>
                {
                    b.HasOne("AttendeeTickerAPI.Models.Student", "Student")
                        .WithMany("ComputerFile")
                        .HasForeignKey("StudentID")
                        .HasConstraintName("FK_ComputerFile_Student");
                });

            modelBuilder.Entity("AttendeeTickerAPI.Models.Event", b =>
                {
                    b.HasOne("AttendeeTickerAPI.Models.Shift", "Shift")
                        .WithMany("Event")
                        .HasForeignKey("ShiftID")
                        .HasConstraintName("FK_Event_Shift");

                    b.HasOne("AttendeeTickerAPI.Models.SubjectClass", "SubjectClass")
                        .WithMany("Event")
                        .HasForeignKey("SubjectClassID")
                        .HasConstraintName("FK_Event_SubjectClass");

                    b.HasOne("AttendeeTickerAPI.Models.Teacher", "Teacher")
                        .WithMany("Event")
                        .HasForeignKey("TeacherID")
                        .HasConstraintName("FK_Event_Teacher");
                });

            modelBuilder.Entity("AttendeeTickerAPI.Models.SubjectClass", b =>
                {
                    b.HasOne("AttendeeTickerAPI.Models.Subject", "Subject")
                        .WithMany("SubjectClass")
                        .HasForeignKey("SubjectID")
                        .HasConstraintName("FK_SubjectClass_Subject");
                });
#pragma warning restore 612, 618
        }
    }
}
